package by.homework.task8;

import java.util.Scanner;

/**
 * 1. Задание
 * 1.1.Напишите метод, который будет возвращать String и принимать в качестве 1-ого параметра
 * и 2-ого параметра объекты типа String.
 * 1.2.В этом методе необходимо выполнить следующую логику. Если строка в 1-ом параметре заканчивается
 * строкой из второго параметра, то необходимо вырезать из строки 1-ого параметра значение строки не
 * включающей строку из второго параметра. Иначе вернуть строку из 1-ого параметра приведённую к
 * верхнему регистру.
 * Пример. Есть 1-ая строка «Я люблю java» и 2-ая строка «java».
 * Так как первая строка оканчивается такой же строкой что и 2-ая строка (java),
 * то метод должен вернуть «Я люблю» иначе метод должен вернуть «Я ЛЮБЛЮ».В этом методе
 * нужно использовать методы для работы со строками: endWith(), indexOf(), substring(), toUpperCase();
 * 1.3 В методе main вызовите этот метод, передайте любые строки, в качестве аргументов и выведите
 * результат вконсоль.
 *
 * 2. Дан текст:
 * 2.1 В тексте после символа каждого слова с индексом k вставить заданную подстроку. Используемые методы
 * (split(), substring())
 * Вынести это в отдельный метод с сигнатурой public String (int k, String text)
 *
 * 3.* Дан текст: Да1та выпуска 8 декабря 1998 года[12]. Кодовое имяPlayground. В данном случае
 * встречается путаница. Выпускались книги, например,Beginning Java 2 by Ivor Horton (Mar 1999),
 * фактически по J2SE 1.2 (бывшее название — Java 2). Вместе с тем по сей день такие книги публикуются,
 * например: Х. М. Дейтел, П. Дж. Дейтел, С. И. Сантри. Технологии программирования на Java2.
 * Распределённые приложения (2011). В то время, когда, как известно, Java 2была исторически заменена
 * следующими релизами, подобные названия книг дезориентируют в понимании, о какой же версии Java они
 * написаны на самом деле. Если J2SE 1.2 принято считать за Java 2, а авторы книг за Java 2 принимают
 * JDK7, это приводит к полной путанице.
 * 3.1 Из текста удалить все символы, кроме пробелов, не являющиеся буквами. Между последовательностями
 * подряд идущих букв оставить хотя бы один пробел. (задача с использованием регулярных выражений)
 */
public class StringMain {
    private static Scanner in = new Scanner(System.in);
    public static void main(String[] args) {
        System.out.println("Введите номер задания от 1 до 3");
        String task = in.nextLine();
        switch (task) {
            case "1" -> {

                String str1 = "I like Java!!!";
                String str2 = "Java!";
                System.out.println(ex1(str1,str2));
            }
            case "2" -> {

                String java = "Каждая строка, создаваемая с помощью оператора new,литерала (заключенная в двойные апострофы) " +
                        " и ли метода класса, создающего строку, является экземпляром класса String. Особенностью объекта класса " +
                        " String является то, что его значение не может быть изменено после создания объекта при помощи любого " +
                        " метода класса. Изменение строки всегда приводит к созданию нового объекта в heap. Сама объектная " +
                        " ссылка при этом сохраняет прежнее значение и хранится в стеке. Произведенные изменения можно сохранить " +
                        " переинициализируя ссылку.";
                String past = "123";

                System.out.println(ex2(5, java, past));

            }
            case "3" -> {
                String java = "Дан текст: Да1та выпуска 8 декабря 1998 года[12]. Кодовое имя Playground. В данном случае" +
                        " встречается путаница. Выпускались книги, например,Beginning Java 2 by Ivor Horton (Mar 1999)," +
                        " фактически по J2SE 1.2 (бывшее название — Java 2). Вместе с тем по сей день такие книги публикуются," +
                        " например: Х. М. Дейтел, П. Дж. Дейтел, С. И. Сантри. Технологии программирования на Java2." +
                        " Распределённые приложения (2011). В то время, когда, как известно, Java 2была исторически заменена" +
                        " следующими релизами, подобные названия книг дезориентируют в понимании, о какой же версии Java они" +
                        " написаны на самом деле. Если J2SE 1.2 принято считать за Java 2, а авторы книг за Java 2 принимают" +
                        " JDK7, это приводит к полной путанице.";
                String result = java.replaceAll("[^a-zA-Za-яА-Я\\s]", "");

                result = result.replaceAll("([a-zA-Za-яА-Я])\\1+", "$1 ");

                    result = result.replaceAll("\\s+", " ");

                System.out.println(result.trim());
            }
            default -> System.out.println("Нет такого пункта меню. Попробуйте еще раз.");
        }
    }

    public static String ex1(String str1, String str2) {
        if (str1 != null && str2 != null && str1.endsWith(str2)) {
            return str1.substring(0, str1.length() - str2.length());
        } else {
            return str1.toUpperCase();
        }
    }

    public static String ex2(int k, String str, String str2) {
        String[] words = str.split(" ");
        String[] result = new String[words.length];

        // Проходим по каждому слову
        for (int i = 0; i < words.length; i++) {
            String word = words[i];

            if (word.length() > k) {

                String part1 = word.substring(0, k);
                String part2 = word.substring(k);

                // Формируем новое слово с вставкой
                result[i] = part1 + str2 + part2;
            } else {
                result[i] = word;
            }
        }

        // Собираем результат обратно в строку
        String resultText = "";
        for (int i = 0; i < result.length; i++) {
            resultText += result[i];
            if (i < result.length - 1) {
                resultText += " ";
            }
        }

        return resultText;

    }
}
